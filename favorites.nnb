{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "function fun(){\r\n  console.log(\"Hello World\")\r\n}\r\nfun()"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hello World",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "function fun(str){\r\n  console.log(str)\r\n}\r\nfun('Function Call')"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Function Call",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const fun = () => console.log('Hello World')\r\nfun()"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hello World",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "(() => console.log('Hello World'))()"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hello World",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const sqrt = x => x * x\r\nsqrt(5)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m25\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const sqrt = x => {\r\n  x * x\r\n}\r\nsqrt(5)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const sqrt = x => {\r\n  return x * x\r\n}\r\nsqrt(5)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m25\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const add = (x,y) => {\r\n  return x + y\r\n}\r\nadd(5,3)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m8\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "class Person {\r\n  constructor(name, age) {\r\n    this.name = name\r\n    this.age = age\r\n  }\r\n  getName(){\r\n    return this.name\r\n  }\r\n  getAge(){\r\n    return this.age\r\n  }\r\n}\r\n\r\nlet tobi = new Person('Tobi', '29')\r\nconsole.log(tobi.getName(), tobi.getAge())\r\nconsole.log(tobi.name, tobi.age)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Tobi 29",
                                "Tobi 29",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const person = (name, age) => ({\r\n  name,\r\n  age,\r\n  getName: () => name,\r\n  getAge: () => age\r\n})\r\n\r\nlet kevin = person('Kevin', '28')\r\nconsole.log(kevin.getName(), kevin.getAge())\r\nconsole.log(kevin.name, kevin.age)\r\nconsole.log(kevin)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Kevin 28",
                                "Kevin 28",
                                "{",
                                "  name: 'Kevin',",
                                "  age: '28',",
                                "  getName: [Function: getName],",
                                "  getAge: [Function: getAge]",
                                "}",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "if (true) {\r\n  console.log(\"It's true!\")\r\n} else {\r\n  console.log('not true')\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "It's true!",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "console.log(true ? \"It's true!\" : 'not true')"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "It's true!",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const arr = [1,2,3,4,5]\r\narr.map(x => x ** x)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "[",
                                "  \u001b[33m1\u001b[39m,",
                                "  \u001b[33m4\u001b[39m,",
                                "  \u001b[33m27\u001b[39m,",
                                "  \u001b[33m256\u001b[39m,",
                                "  \u001b[33m3125\u001b[39m",
                                "]"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const arr = [1,2,3,4,5]\r\narr.map(x => x ** x)\r\n\r\nconsole.log(arr)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 1, 2, 3, 4, 5 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const arr = [1,2,3,4,5]\r\nconst arr2 = arr.map(x => x ** x)\r\n\r\nconsole.log(arr2)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 1, 4, 27, 256, 3125 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const arr = [1,2,3,4,5]\r\nconst arr2 = arr.map(x => x % 2 === 0 ? x : x ** x)\r\n\r\nconsole.log(arr2)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 1, 2, 27, 4, 3125 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const a = () => a\r\na()"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[36m[Function: a]\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const a = (x) => x\r\na(a)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[36m[Function: a]\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const fib = x => x <= 1 ? x : fib(x-1) + fib(x-2)\r\nfib(7)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m13\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const fac = x => x > 1 ? x * fac(x-1) : 1\r\n\r\nfac(7)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m5040\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const add = a => b => a + b\r\nadd(5)(5)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m10\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const add = a => b => a + b\r\nconst add3 = add(3)\r\nadd3(3)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33m6\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const log = prefix => errormsg => console.log(`${prefix}: ${errormsg}`) \r\nconst w_log = log('waring')\r\nconst e_log = log('error')\r\nconst i_log = log('info')\r\n\r\ne_log('app crashed')\r\nw_log('app runs close to the memory limit')\r\ni_log('access by user: SRU')\r\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "error: it crashed",
                                "warning: it runs close to the memory limit",
                                "info: access by user: SRU",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const add = a => b => a + b\r\nconst add3 = add(3)\r\nconsole.log(add3.toString())"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "b => a + b",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "a => b => a + b\r\n3 => b => 3 + b\r\n3 => (b => 3 + b) <-- return values"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const t = a => b => a;\r\nconst f = a => b => b;\r\n\r\nconsole.log(t(true)(false));"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "true",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const not = f => a => b => f(b)(a);\r\nconst not_true = not(t)\r\nconst not_false = not(f)\r\n\r\nconsole.log(\r\n  not_true(false)(true),\r\n  not(t)(false)(true),\r\n  not_false(true)(false),\r\n  not(f)(true)(false),\r\n  '\\n',\r\n  not(f).toString()\r\n);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "true true true true ",
                                " a => b => f(b)(a)",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const and = a => b => a(b)(a)\r\nconsole.log(\r\n  and(t)(t),\r\n  and(t)(f),\r\n  and(f)(t),\r\n  and(f)(f)\r\n)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[Function: t] [Function: f] [Function: f] [Function: f]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "const or = a => b => a(a)(b)\r\nconsole.log(\r\n  or(t)(t),\r\n  or(t)(f),\r\n  or(f)(t),\r\n  or(f)(f)\r\n)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[Function: t] [Function: t] [Function: t] [Function: f]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}